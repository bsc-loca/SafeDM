* Adapt to one lane/ one register--> Check why are we getting different number of cycles without diversity
** Add license
** Solve uppercase issue 
*Take a look to the warnings
*Get hardware resources with ECC
**Add headers

review the dual lane scheme
Take a look why the registers enable signal are registered
register outputs
Add driver
Try it in a bitstream to check that works properly

Add write ports -> Problem with write ports is that wb is the last stage of the pipeline so 
                   the values stored in the FIFO leave the pipeline the next transition and
                   are accounting for data values that are not in the pipeline anymore.
                   This could lead to a false negative if we take into account values that are
                   not in the pipeline anymore.

Change way in which registers behave in the FIFO -> Since there are several registers we should not keep the last read/write value until a new one 
                                                    enters the FIFO. If we do it like that we could be accounting for values that already left the
                                                    pipeline and they cannot produce diversity. To solve this issue we should leave the FIFO position
                                                    with an "empty" value if no data is read/write on that port.
Add documentation


** solved items
* pending to be reviewed

